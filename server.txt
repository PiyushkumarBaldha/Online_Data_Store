const express = require('express'); 
const bodyParser = require('body-parser');
// XLSX is no longer used for CSV writing but we keep it if needed elsewhere
const XLSX = require('xlsx'); 
const fs = require('fs');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 3000;
const csvFilePath = path.join(__dirname, 'quiz_data.csv');

app.use(bodyParser.json());
app.use(express.static(__dirname));

app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});

// Modified function to write data to CSV file instead of Excel
function appendDataToExcel(data) {
    // Define the CSV headers and the order in which the data will be saved
    const headers = ["timestamp", "userId", "password", "age", "profession", "status", "score", "answers", "confidence", "timeTaken", "attempt"];
    
    // Prepare a row based on the provided data. We flatten nested objects and convert arrays to JSON strings.
    let row = [];
    row.push(data.timestamp || "");
    row.push(data.formData.userId || "");
    row.push(data.formData.password || "");
    row.push(data.formData.age || "");
    row.push(data.formData.profession || "");
    row.push(data.formData.status || "");
    row.push(data.quizPerformance.score || "");
    row.push(JSON.stringify(data.quizPerformance.answers) || "");
    row.push(JSON.stringify(data.quizPerformance.confidence) || "");
    row.push(data.quizPerformance.timeTaken || "");
    row.push(data.attempt || "");

    // Create a CSV line from the row array
    const csvLine = row.join(",") + "\n";

    // If the CSV file does not exist, create it and add the header row first.
    if (!fs.existsSync(csvFilePath)) {
       const headerLine = headers.join(",") + "\n";
       fs.writeFileSync(csvFilePath, headerLine);
    }

    // Append the CSV line with quiz data to the file.
    fs.appendFileSync(csvFilePath, csvLine);
    console.log("Data written successfully to CSV file!");
}

// Endpoint to receive quiz data
app.post('/submitQuizData', (req, res) => {
    try {
        console.log("Received quiz data:", req.body);
        if (Object.keys(req.body).length === 0) {
            return res.status(400).json({ message: "No data received" });
        }
        appendDataToExcel(req.body);
        res.status(200).json({ message: "Data saved successfully!" });
    } catch (error) {
        console.error("Error saving quiz data:", error);
        res.status(500).json({ message: "Error saving quiz data." });
    }
});

// Endpoint to download the CSV file
app.get('/download', (req, res) => {
    if (fs.existsSync(csvFilePath)) {
        res.download(csvFilePath, 'quiz_data.csv', (err) => {
            if (err) {
                console.error("Error sending file:", err);
                res.status(500).send("Error downloading file.");
            }
        });
    } else {
        res.status(404).send("No data available to download.");
    }
});

app.listen(PORT, () => {
    console.log(`Server is running on http://localhost:${PORT}`);
    console.log(`Download CSV file at: http://localhost:${PORT}/download`);
});
